================================================================================
' This is a header comment.
@startuml
title writeDocumentSync.puml
skinparam linetype ortho
skinparam class {
    BackgroundColor #cfcfcf
    ArrowColor Navy
    BorderColor Navy
}


class "TestClass<TValue>" as PlantUml.Reflector.xUnit.TestClass_TValue_ 
class PlantUml.Reflector.xUnit.TestClass_TValue_ {
	--- attributes ---
	[NullableContext((Byte)1), Nullable((Byte)0)]

	... fields ...
	[Serializable]
	{static} -_innerClass: PlantUml.Reflector.xUnit.TestClass<TValue>.InnerClass<TValue, T>

	{static} -_datesField: IEnumerable<PlantUml.Reflector.xUnit.TestClass<TValue>.InnerClass<TValue, DateTime>>

	... constructors ...
	+ctor(value: string)

	... properties ...
	[Serializable]
	-InnerProperty (-get;) : PlantUml.Reflector.xUnit.TestClass<TValue>.InnerClass<TValue, T> << property >>

	[Serializable, Nullable((Byte)0), DefaultMember("Chars"), NullableContext((Byte)1)]
	-Property (-get; -set;) : string << property >>

	... methods ...
	-ResetProperty(): void

	[NotifyPropertyChangedInvocator]
	-OnPropertyChanged(propertyName: string  =): void

	[NullableContext((Byte)0)]
	+Convert<TFrom>(from: TFrom): TValue

	{static} +CreateInnerClass(): PlantUml.Reflector.xUnit.TestClass<TValue>.InnerClass<TValue, TValue>

	... events ...
	[Nullable((Byte)2)]
	+PropertyChanged(sender: object, e: ComponentModel.PropertyChangedEventArgs) : void << event >>

}


class "InnerClass<TValue, T>" as PlantUml.Reflector.xUnit.TestClass_TValue_.InnerClass_TValue__T_ 
class PlantUml.Reflector.xUnit.TestClass_TValue_.InnerClass_TValue__T_ {
	... fields ...
	{static} -_value: T

	... constructors ...
	+ctor()

	... methods ...
}
abstract class "Extensions" as PlantUml.Reflector.xUnit.Extensions 
abstract class PlantUml.Reflector.xUnit.Extensions << static >> {
	--- attributes ---
	[Extension]

	... methods ...
	[Extension]
	{static} +GetName<TValue, T>(innerClass: PlantUml.Reflector.xUnit.TestClass<TValue>.InnerClass<TValue, T>): string

}
abstract class "TestBase<TValue>" as PlantUml.Reflector.xUnit.TestBase_TValue_ 
abstract class PlantUml.Reflector.xUnit.TestBase_TValue_ {
	--- attributes ---

	... constructors ...
	#ctor()

	... methods ...
}
class "MyEntity" as PlantUml.Reflector.xUnit.MyEntity 
class PlantUml.Reflector.xUnit.MyEntity {
	--- attributes ---
	[NullableContext((Byte)1), Nullable((Byte)0)]

	... fields ...
	... constructors ...
	#ctor(original: PlantUml.Reflector.xUnit.MyEntity)

	+ctor(Message: string)

	... properties ...
	[Serializable, Nullable((Byte)0), DefaultMember("Chars"), NullableContext((Byte)1)]
	+Message (+get; +set;) : string << property >>

	... methods ...
	[NullableContext((Byte)0)]
	+ToString(): string

	[NullableContext((Byte)2)]
	{static} +op_Inequality(r1: PlantUml.Reflector.xUnit.MyEntity, r2: PlantUml.Reflector.xUnit.MyEntity): bool

	[NullableContext((Byte)2)]
	{static} +op_Equality(r1: PlantUml.Reflector.xUnit.MyEntity, r2: PlantUml.Reflector.xUnit.MyEntity): bool

	+GetHashCode(): int

	[NullableContext((Byte)2)]
	+Equals(obj: object): bool

	[NullableContext((Byte)2)]
	+Equals(other: PlantUml.Reflector.xUnit.MyEntity): bool

	[NullableContext((Byte)2)]
	+Equals(obj: object): bool

	[NullableContext((Byte)2)]
	+Equals(other: PlantUml.Reflector.xUnit.MyEntity): bool

	+<Clone>$(): PlantUml.Reflector.xUnit.MyEntity

	+Deconstruct(Message: String&): void

}
PlantUml.Reflector.xUnit.TestClass_TValue_ o- PlantUml.Reflector.xUnit.TestClass_TValue_.InnerClass_TValue__T_ : __innerClass << aggregation[] >> 
PlantUml.Reflector.xUnit.TestClass_TValue_ -u-|> PlantUml.Reflector.xUnit.TestBase_TValue_ : extends
PlantUml.Reflector.xUnit.TestClass_TValue_ --() ComponentModel.INotifyPropertyChanged : implements


PlantUml.Reflector.xUnit.MyEntity -> Type : EqualityContract << use >>
PlantUml.Reflector.xUnit.MyEntity --() IEquatable_PlantUml.Reflector.xUnit.MyEntity_ : implements
note as footer
	Testing...
end note
@enduml
================================================================================
